<Window x:Class="HolidayDesktop.Views.SettingsView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:HolidayDesktop.Views"
        mc:Ignorable="d" 
        ResizeMode="NoResize"
        xmlns:t="http://schemas.xceed.com/wpf/xaml/toolkit"
        Icon="/Icons/HolidayDesktop.ico"
        WindowStartupLocation="CenterScreen"
        Title="Settings" 
        SizeToContent="WidthAndHeight" 
        Loaded="Window_Loaded">
    <Grid Width="500" Height="530">
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="65" />
        </Grid.RowDefinitions>
        <TabControl Grid.Row="0">
            <TabItem Header="General">
                <StackPanel>
                    <GroupBox Margin="5">
                        <GroupBox.Header>
                            <RadioButton Margin="3" GroupName="General" IsChecked="{Binding ThemeChecked, Mode=TwoWay}">Use Themes</RadioButton>
                        </GroupBox.Header>
                        <Grid Margin="15" IsEnabled="{Binding ThemeChecked}">
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition Height="5" />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <DataGrid Grid.Row="0" ItemsSource="{Binding Themes, Mode=TwoWay, NotifyOnTargetUpdated=True, UpdateSourceTrigger=PropertyChanged}" Height="150" RowHeight="25" CanUserAddRows="False" CanUserDeleteRows="False" VerticalGridLinesBrush="Gray" HorizontalGridLinesBrush="Gray" HeadersVisibility="Column" AutoGenerateColumns="False" CanUserResizeColumns="False" CanUserResizeRows="False" CanUserSortColumns="False" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
                                <DataGrid.Columns>
                                    <DataGridTemplateColumn Width="30">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <RadioButton GroupName="IsActive" IsChecked="{Binding IsActive, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="5" />
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>

                                    <DataGridTextColumn Binding="{Binding Name, Mode=OneWay}" Header="Theme" Width="220" />
                                    <DataGridTemplateColumn Header="Day" Width="*">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <DatePicker BorderThickness="0" SelectedDate="{Binding Date, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                                    <DatePicker.Resources>
                                                        <Style TargetType="{x:Type DatePickerTextBox}">
                                                            <Setter Property="Control.Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate>
                                                                        <TextBlock x:Name="PART_TextBox" Text="{Binding Path=SelectedDate, StringFormat='MMMM, dd', RelativeSource={RelativeSource AncestorType={x:Type DatePicker}}}" />
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                        <!--<Style TargetType="{x:Type Button}">
                                                            <Setter Property="Control.Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate>
                                                                        <Button x:Name="PART_Button" VerticalAlignment="Stretch" Visibility="Collapsed"></Button>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>-->
                                                    </DatePicker.Resources>
                                                </DatePicker>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTemplateColumn Width="60">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                                    <Button Content="..." Width="20" Height="20" Margin="2" Click="ChangeTheme_Click">
                                                        <Button.ToolTip>
                                                            <ToolTip>
                                                                Browse a new theme
                                                            </ToolTip>
                                                        </Button.ToolTip>
                                                    </Button>
                                                    <Button Content="-" Width="20" Height="20" Margin="2" Click="RemoveTheme_Click">
                                                        <Button.ToolTip>
                                                            <ToolTip>
                                                                Delete the theme
                                                            </ToolTip>
                                                        </Button.ToolTip>
                                                    </Button>
                                                </StackPanel>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                </DataGrid.Columns>
                                <DataGrid.Resources>
                                    <ResourceDictionary>
                                        <Style x:Key="{x:Type DataGridCell}" TargetType="{x:Type DataGridCell}">
                                            <Setter Property="Background" Value="{x:Null}" />
                                            <Setter Property="BorderBrush" Value="{x:Null}" />
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type DataGridCell}">
                                                        <Grid Background="{TemplateBinding Background}">
                                                            <ContentPresenter VerticalAlignment="Center"/>
                                                        </Grid>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                            <Style.Triggers>
                                                <Trigger Property="IsSelected" Value="True">
                                                    <Setter Property="Background" Value="{x:Null}" />
                                                    <Setter Property="BorderBrush" Value="{x:Null}" />
                                                    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=Foreground}"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                        <Style TargetType="{x:Type DataGridRow}">
                                            <Setter Property="Background" Value="{x:Null}" />
                                            <Setter Property="BorderBrush" Value="{x:Null}" />
                                            <Style.Triggers>
                                                <Trigger Property="IsSelected" Value="True">
                                                    <Setter Property="Background" Value="{x:Null}" />
                                                    <Setter Property="BorderBrush" Value="{x:Null}" />
                                                    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=Foreground}"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ResourceDictionary>
                                </DataGrid.Resources>
                            </DataGrid>
                            <DockPanel Grid.Row="2">
                                <CheckBox VerticalAlignment="Center" IsChecked="{Binding ChangeThemeWhenDayIsChanged, Mode=TwoWay}" IsEnabled="{Binding ThemeChecked}" Content="Change a theme when a day is changed" />
                                <Button Width="20" Height="20" HorizontalAlignment="Right" Content="+" IsEnabled="{Binding ThemeChecked}" Click="AddTheme_Click">
                                    <Button.ToolTip>
                                        <ToolTip>
                                            Add a new theme
                                        </ToolTip>
                                    </Button.ToolTip>
                                </Button>
                            </DockPanel>
                        </Grid>
                    </GroupBox>
                    <GroupBox Margin="5">
                        <GroupBox.Header>
                            <RadioButton Margin="3" GroupName="General" IsChecked="{Binding PathChecked, Mode=TwoWay}">Use Image Paths</RadioButton>
                        </GroupBox.Header>
                        <Grid Margin="15" IsEnabled="{Binding PathChecked}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="110" />
                                <ColumnDefinition Width="12" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="25" />
                                <RowDefinition Height="12" />
                                <RowDefinition Height="25" />
                            </Grid.RowDefinitions>

                            <TextBlock Text="Folder with images:" Grid.Row="0" VerticalAlignment="Center" />
                            <Grid Grid.Row="0" Grid.Column="2">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="40" />
                                </Grid.ColumnDefinitions>
                                <TextBox Padding="3" Text="{Binding ImagesDirectoryName, Mode=TwoWay}"></TextBox>
                                <Button Grid.Column="1" Content="..." Click="BrowseImagesDirectory_Click" />
                            </Grid>

                            <TextBlock Text="Central image file:" Grid.Row="2" VerticalAlignment="Center" />
                            <Grid Grid.Row="2" Grid.Column="2">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="40" />
                                </Grid.ColumnDefinitions>
                                <TextBox Padding="3" Text="{Binding ImageFileName, Mode=TwoWay}"></TextBox>
                                <Button Grid.Column="1" Content="..." Click="BrowseImageFile_Click" />
                            </Grid>
                        </Grid>
                    </GroupBox>
                    <Grid Margin="27, 15, 27, 15">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="107" />
                            <ColumnDefinition Width="12" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="25" />
                        </Grid.RowDefinitions>

                        <TextBlock Text="Monitor:" Grid.Row="0" VerticalAlignment="Center" />
                        <ComboBox Grid.Row="0" Grid.Column="2" ItemsSource="{Binding Monitors}" SelectedValue="{Binding Monitor, Mode=TwoWay}" SelectedValuePath="Key" DisplayMemberPath="Value" />
                    </Grid>
                </StackPanel>
            </TabItem>
            <TabItem Header="Animation">
                <Grid Margin="15">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="160" />
                        <ColumnDefinition Width="12" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="25" />
                        <RowDefinition Height="12" />
                        <RowDefinition Height="25" />
                        <RowDefinition Height="12" />
                        <RowDefinition Height="25" />
                        <RowDefinition Height="12" />
                        <RowDefinition Height="25" />
                    </Grid.RowDefinitions>

                    <TextBlock Text="Show center image:" Grid.Row="0" VerticalAlignment="Center" />
                    <ComboBox Grid.Row="0" Grid.Column="2" ItemsSource="{Binding TrueFalseItems}" SelectedValue="{Binding ShowCenterImage, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" SelectedValuePath="Key" DisplayMemberPath="Value" />

                    <TextBlock Text="Run image animation:" Grid.Row="2" VerticalAlignment="Center" />
                    <ComboBox Grid.Row="2" Grid.Column="2" ItemsSource="{Binding TrueFalseItems}" SelectedValue="{Binding RunImageAnimation, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" SelectedValuePath="Key" DisplayMemberPath="Value" />

                    <TextBlock Text="Interval between images (sec):" Grid.Row="4" VerticalAlignment="Center" />
                    <TextBox Grid.Row="4" Grid.Column="2" Padding="3" Text="{Binding IntervalBetweenImages, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"></TextBox>

                    <TextBlock Text="Show image (sec):" Grid.Row="6" VerticalAlignment="Center" />
                    <TextBox Grid.Row="6" Grid.Column="2" Padding="3" Text="{Binding IntervalForShowImage, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"></TextBox>
                </Grid>
            </TabItem>
        </TabControl>
        <StackPanel Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Right">
            <Button Content="OK" Command="{Binding OKCommand}" IsDefault="True" Padding="3" Width="100" Height="30" />
            <Button Content="Cancel" Command="{Binding CancelCommand}" IsCancel="True" Width="100" Height="30" Margin="5,5,25,5"/>
        </StackPanel>
    </Grid>
</Window>
